{"version":3,"sources":["app.ts","level.ts","playarea.ts","player.ts","playerinput.ts","scorearea.ts"],"names":["App","App.constructor","App.preload","App.create","App.update","App.register","Level","Level.constructor","Level.create","Level.createEmptyLine","Level.howManyInThisRow","PlayArea","PlayArea.constructor","PlayArea.preload","PlayArea.create","PlayArea.update","Player","Player.constructor","Player.preload","Player.create","Player.update","PlayerInput","PlayerInput.constructor","PlayerInput.isKeyPressed","PlayerInput.otherInputHasKeyPressed","PlayerInput.isLeft","PlayerInput.isRight","ScoreArea","ScoreArea.constructor","ScoreArea.preload","ScoreArea.create","ScoreArea.update"],"mappings":"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MA,CAACA,CAACA;QACnEA,CAACA;QACDA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA;IAC/BA,CAACA;IAEMJ,6BAAOA,GAAdA;QACIK,EAAEA,CAACA,CAACA,GAAGA,CAACA,gBAAgBA,CAACA,CAACA,CAACA;YACvBA,MAAMA,CAACA,IAAIA,CAACA,uBAAuBA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA;QACpEA,CAACA;QACDA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,CAACA;IAChCA,CAACA;IACLL,kBAACA;AAADA,CA/BA,AA+BCA,IAAA;ACjCD;IAIIM,mBAAoBA,IAAiBA,EAASA,CAASA,EAASA,CAASA,EAASA,KAAaA,EAASA,MAAcA;QAAlGC,SAAIA,GAAJA,IAAIA,CAAaA;QAASA,MAACA,GAADA,CAACA,CAAQA;QAASA,MAACA,GAADA,CAACA,CAAQA;QAASA,UAAKA,GAALA,KAAKA,CAAQA;QAASA,WAAMA,GAANA,MAAMA,CAAQA;QAF9GA,YAAOA,GAAWA,QAAQA,CAACA;IAG/BA,CAACA;IAELD,2BAAOA,GAAPA;QACIE,IAAIA,CAACA,CAACA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA;IACpDA,CAACA;IAEDF,0BAAMA,GAANA;IAEAG,CAACA;IAEDH,0BAAMA,GAANA;QACII,IAAIA,CAACA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;QACpBA,IAAIA,CAACA,CAACA,CAACA,SAASA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,CAACA,CAACA,CAACA;QAClCA,IAAIA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,EAAEA,CAACA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,MAAMA,CAACA,CAACA;QAC/CA,IAAIA,CAACA,CAACA,CAACA,OAAOA,EAAEA,CAACA;IACrBA,CAACA;IACLJ,gBAACA;AAADA,CArBA,AAqBCA,IAAA","file":"../../built/local/tsc.js","sourcesContent":["/// <reference path=\"../typings/phaser.d.ts\" />\r\n/// <reference path=\"../typings/underscore/underscore.d.ts\" />\r\n\r\nclass App {\r\n    private game: Phaser.Game;\r\n    private static objects: Array<IGameObject> = [];\r\n    private static ranPreload: boolean = false;\r\n    private static ranCreate: boolean = false;\r\n    public static requireTwoInputs: boolean = false;\r\n\r\n    constructor(public width: number, public height: number) {\r\n        this.game = new Phaser.Game(width, height, Phaser.AUTO, 'content', { preload: this.preload, create: this.create, update: this.update });\r\n    }\r\n\r\n    preload() {\r\n        App.ranPreload = true;\r\n\r\n        _.each(App.objects, o => o.preload());\r\n    }\r\n\r\n    create() {\r\n        App.ranCreate = true;\r\n\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n        var spacerSize = 280;\r\n        var playAreaWidth = (this.game.width - spacerSize) / 2;\r\n\r\n        var kb = this.game.input.keyboard;\r\n\r\n        var leftKeys = new PlayerInput(kb.addKey(Phaser.Keyboard.A), kb.addKey(Phaser.Keyboard.D));\r\n        var leftArea = new PlayArea(this.game, 0, 0, playAreaWidth, this.game.height, leftKeys);\r\n        App.register(leftArea);\r\n\r\n        var rightKeys = new PlayerInput(kb.addKey(Phaser.Keyboard.LEFT), kb.addKey(Phaser.Keyboard.RIGHT));\r\n        var rightArea = new PlayArea(this.game, playAreaWidth + spacerSize, 0, playAreaWidth, this.game.height, rightKeys);\r\n        App.register(rightArea);\r\n\r\n        leftKeys.otherInput = rightKeys;\r\n        rightKeys.otherInput = leftKeys;\r\n\r\n        var scoreArea = new ScoreArea(this.game, playAreaWidth, 0, spacerSize, this.game.height);\r\n        App.register(scoreArea);\r\n\r\n        _.each(App.objects, o => o.create());\r\n\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n\r\n        _.each(App.objects, o => o.update());\r\n    }\r\n\r\n    public static register(obj: IGameObject) : void {\r\n        this.objects.push(obj);\r\n        if (App.ranPreload) {\r\n            obj.preload();\r\n        }\r\n        if (App.ranCreate) {\r\n            obj.create();\r\n        }\r\n    }\r\n}\r\n\r\nwindow.onload = () => {\r\n    var app = new App(1600, 800);\r\n};","class Level {\r\n    public speed: number;\r\n    public data: Uint8Array[];\r\n\r\n    public static create(speed: number, lines: number, lineWidth: number, goodDropRate: number, badDropRate: number, obstacleRate: number, maxObstaclesPerLine: number): Level {\r\n        var lv = new Level();\r\n        lv.data = [];\r\n\r\n        // A certain number of lines is left blank so the player can 'get started' before things start spawning\r\n        var blankLines = lineWidth * 2;\r\n\r\n        // push the blank lines onto the array\r\n        for (var i = 0; i < blankLines; i++) {\r\n            lv.data.push(this.createEmptyLine(lineWidth));\r\n        }\r\n\r\n        // Now for each real line..\r\n        // Keep track of the total number of good / bad drops and obstacles\r\n        var goodDrops = 0;\r\n        var badDrops = 0;\r\n        var obstacles = 0;\r\n\r\n        for (var j = 0; j < lines; j++) {\r\n            // And for each row,\r\n            // Figure out how many obstacles we'll have\r\n\r\n            // Get a new empty row\r\n            var line = this.createEmptyLine(lineWidth);\r\n\r\n            \r\n        }\r\n        return new Level();\r\n    }\r\n\r\n    private static createEmptyLine(width: number): Uint8Array {\r\n        var newArray = new Uint8Array(width);\r\n        newArray[0] = 1;\r\n        newArray[width - 1] = 1;\r\n        return newArray;\r\n    }\r\n\r\n    private static howManyInThisRow(lineNumber: number, rate: number, totalSoFar: number, maxPerLine : number): number {\r\n        var expectedRate = rate * lineNumber;\r\n\r\n        var shortBy = expectedRate - totalSoFar;\r\n\r\n        if (shortBy < 0)\r\n            return 0;\r\n\r\n        if\r\n\r\n\r\n    }\r\n}","/// <reference path=\"../typings/phaser.d.ts\" />\r\n\r\nclass PlayArea implements IGameObject {\r\n    public player: Player;\r\n    public g: Phaser.Graphics;\r\n\r\n    private playAreaColor: number = 0x000000;\r\n\r\n    constructor(private game: Phaser.Game, public x: number, public y: number, public width: number, public height: number, public input: PlayerInput) {\r\n    }\r\n\r\n    preload(): void {\r\n    }\r\n\r\n    create(): void {\r\n        this.g = this.game.add.graphics(this.x, this.y);\r\n\r\n        this.player = new Player(this, this.game);\r\n\r\n        App.register(this.player);\r\n    }\r\n    \r\n    update(): void {\r\n        this.g.clear();\r\n\r\n        this.g.lineStyle(6, this.playAreaColor, 1);\r\n        this.g.beginFill(this.playAreaColor, 1);\r\n        this.g.drawRect(0 + 3, 0 + 3, this.width - 6, this.height - 6);\r\n        this.g.endFill();\r\n    }\r\n}","/// <reference path=\"../typings/phaser.d.ts\" />\r\n\r\nclass Player implements IGameObject {\r\n    private startX: number;\r\n    private startY: number;\r\n\r\n    private g: Phaser.Graphics;\r\n    private size: number = 20;\r\n    private speed: number = 800;\r\n\r\n    private minColor: number = 0x900000;\r\n    private maxColor: number = 0xFF0000;\r\n    private color: number = 0xFF0000;\r\n    private colorIncrement: number = 0x010000;\r\n    private isColorIncreasing: number = 1;\r\n\r\n    private sizeMod: number;\r\n    private frameSize: number;\r\n\r\n    private input: PlayerInput;\r\n    private sprite: Phaser.Sprite;\r\n    private body: Phaser.Physics.Arcade.Body;\r\n\r\n    constructor(private playArea: PlayArea, private game: Phaser.Game) {\r\n        this.startX = playArea.width / 2;\r\n        this.startY = playArea.height - 44;;\r\n    }\r\n\r\n    preload(): void {\r\n\r\n    }\r\n\r\n    create(): void {\r\n        this.sprite = new Phaser.Sprite(this.game, this.startX, this.startY);\r\n        this.game.add.existing(this.sprite);\r\n        this.game.physics.arcade.enable(this.sprite);\r\n        this.body = this.sprite.body;\r\n        \r\n        this.body.x = this.startX;\r\n        this.body.y = this.startY;\r\n        this.g = this.playArea.g;\r\n        this.input = this.playArea.input;\r\n    }\r\n\r\n    update(): void {\r\n        this.body.velocity.x = 0;\r\n        //if (this.body.x < 40) this.body.x = 40;\r\n        //if (this.body.x )\r\n\r\n        this.sizeMod = (0.05 * ((this.color - this.minColor) / (this.maxColor - this.minColor)));\r\n        this.frameSize = this.size * (1 + this.sizeMod);\r\n\r\n        this.body.x = Math.min(Math.max(this.body.x, 0 + (this.frameSize + 40)), this.playArea.width - (this.frameSize + 40));\r\n\r\n        if (this.input.isLeft()) {\r\n            this.body.velocity.x = -this.speed;\r\n        }\r\n        else if (this.input.isRight()) {\r\n            this.body.velocity.x = this.speed;\r\n        }\r\n\r\n        this.color += (this.colorIncrement * this.isColorIncreasing);\r\n        if (this.color >= this.maxColor) {\r\n            this.isColorIncreasing = -1;\r\n            this.color = this.maxColor;\r\n        }\r\n        if (this.color <= this.minColor) {\r\n            this.isColorIncreasing = 32;\r\n            this.color = this.minColor;\r\n        }\r\n\r\n        this.g.lineStyle(2, this.color, 1);\r\n        this.g.beginFill(this.color, 1);\r\n        this.g.drawTriangle([new Phaser.Point(this.body.x - this.frameSize, this.body.y), new Phaser.Point(this.body.x, this.body.y - (this.frameSize * 1.5)), new Phaser.Point(this.body.x + this.frameSize, this.body.y)], false);\r\n        this.g.endFill();\r\n    }\r\n}","/// <reference path=\"../typings/phaser.d.ts\" />\r\n\r\nclass PlayerInput {\r\n    public otherInput: PlayerInput;\r\n\r\n    constructor(private leftKey: Phaser.Key, private rightKey: Phaser.Key) {\r\n\r\n    }\r\n\r\n    public isKeyPressed(): boolean {\r\n        return (this.leftKey.isDown || this.rightKey.isDown);\r\n    }\r\n\r\n    private otherInputHasKeyPressed(): boolean {\r\n        if (!this.otherInput) {\r\n            return true;\r\n        }\r\n        return this.otherInput.isKeyPressed();\r\n    }\r\n\r\n    public isLeft(): boolean {\r\n        if (App.requireTwoInputs) {\r\n            return this.otherInputHasKeyPressed() && (this.leftKey.isDown);\r\n        }\r\n        return this.leftKey.isDown;\r\n    }\r\n\r\n    public isRight(): boolean {\r\n        if (App.requireTwoInputs) {\r\n            return this.otherInputHasKeyPressed() && (this.rightKey.isDown);\r\n        }\r\n        return this.rightKey.isDown;\r\n    }\r\n}","class ScoreArea implements IGameObject {\r\n    private g: Phaser.Graphics;\r\n    private bgColor: number = 0x00309A;\r\n\r\n    constructor(private game: Phaser.Game, public x: number, public y: number, public width: number, public height: number) {\r\n        }\r\n\r\n    preload(): void {\r\n        this.g = this.game.add.graphics(this.x, this.y);\r\n    }\r\n\r\n    create(): void {\r\n\r\n    }\r\n\r\n    update(): void {\r\n        this.g.lineStyle(0);\r\n        this.g.beginFill(this.bgColor, 1);\r\n        this.g.drawRect(0, 0, this.width, this.height);\r\n        this.g.endFill();\r\n    }\r\n}"],"sourceRoot":"/source/"}